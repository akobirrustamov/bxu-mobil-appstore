import React, { useEffect } from 'react';
import { Alert, Platform } from 'react-native';
import * as Notifications from 'expo-notifications';
import * as Device from 'expo-device';

// ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,     // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–∞–Ω–Ω–µ—Ä
    shouldPlaySound: true,     // –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∑–≤—É–∫
    shouldSetBadge: false,     // –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å –±–µ–π–¥–∂ –Ω–∞ –∏–∫–æ–Ω–∫–µ
  }),
});

export default function PushNotificationRegister() {
  useEffect(() => {
    registerForPushNotificationsAsync().then(token => {
      if (token) {
        console.log('üì¨ Push Token:', token);
        Alert.alert('Push Token –ø–æ–ª—É—á–µ–Ω', token);
      }
    });

    // ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const subscription = Notifications.addNotificationReceivedListener(notification => {
      console.log('üì© –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', notification);
    });

    return () => {
      subscription.remove();
    };
  }, []);

  return null;
}

async function registerForPushNotificationsAsync() {
  let token;

  if (Device.isDevice) {
    const { status: existingStatus } = await Notifications.getPermissionsAsync();
    let finalStatus = existingStatus;

    if (existingStatus !== 'granted') {
      const { status } = await Notifications.requestPermissionsAsync();
      finalStatus = status;
    }

    if (finalStatus !== 'granted') {
      Alert.alert('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ');
      return;
    }

    token = (await Notifications.getExpoPushTokenAsync()).data;
    console.log('‚úÖ Token:', token);
  } else {
    Alert.alert('Push –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ');
  }

  if (Platform.OS === 'android') {
    await Notifications.setNotificationChannelAsync('default', {
      name: 'default',
      importance: Notifications.AndroidImportance.MAX, // üéØ MAX = –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ–≥–¥–∞
      vibrationPattern: [0, 250, 250, 250],
      lightColor: '#FF231F7C',
    });
  }

  return token;
}
